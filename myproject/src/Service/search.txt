  const [selectedProvince, setSelectedProvince] = useState('');
  const [selectedAmphure, setSelectedAmphure] = useState('');
  const [selectedTambon, setSelectedTambon] = useState('');
  const [selectedServices, setSelectedServices] = useState([]);
  const [error, setError] = useState('');

  const handleProvinceChange = (e) => {
    const provinceName = e.target.value;
    const province = provinceData.find((province) => province.name_th === provinceName);
    setSelectedProvince(province);
    setSelectedAmphure('');
    setSelectedTambon('');
    setError('');
  };

  const handleAmphureChange = (e) => {
    const amphureName = e.target.value;
    const filteredAmphures = amphureData.filter((amphure) => {
      return amphure.province_id === selectedProvince.id;
    });
    const amphure = filteredAmphures.find((amphure) => amphure.name_th === amphureName);
    setSelectedAmphure(amphure);
    setSelectedTambon('');
    setError('');
  };

  const handleTambonChange = (e) => {
    const tambonName = e.target.value;
    const tambon = tambonData.find((tambon) => tambon.name_th === tambonName);
    setSelectedTambon(tambon);
    setError('');
  };

  const handleSubmit = async (e) => {
    e.preventDefault();
    try {
      const response = await axios.get('/search-service', {
        province: selectedProvince.name_th,
        amphure: selectedAmphure.name_th, 
        tambon: selectedTambon.name_th, 


      });
      setSelectedServices(response.data.services);
      setError('');
    } catch (error) {
      console.error('การค้นหาบริการล้มเหลว:', error);
      setError('ไม่สามารถค้นหาบริการได้');
    }
  };
  
const filteredAmphures = selectedProvince ? amphureData.filter((amphure) => {
  return amphure.province_id === selectedProvince.id;
}) : [];

const filteredTambons = selectedAmphure ? tambonData.filter((tambon) => {
  return tambon.amphure_id === selectedAmphure.id;
}) : [];

  return (
    <div className="p-5">
      <h2 className="text-2xl mb-3">ค้นหาบริการ</h2>
      <form onSubmit={handleSubmit} className="mb-5">
        <div className="mb-3">
          <label htmlFor="province" className="mr-3">จังหวัด:</label>
          <select
            id="province"
            value={selectedProvince.name_th}
            onChange={handleProvinceChange}
            className="border rounded px-2 py-1"
          >
            <option value="">เลือกจังหวัด</option>
            {provinceData.map((province) => (
              <option key={province.id} value={province.name_th}>
                {province.name_th}
              </option>
            ))}
          </select>
        </div>
        <div className="mb-3">
          <label htmlFor="amphure" className="mr-3">อำเภอ:</label>
          <select
            id="amphure"
            value={selectedAmphure.name_th}
            onChange={handleAmphureChange}
            className="border rounded px-2 py-1"
          >
            <option value="">เลือกอำเภอ</option>
            {filteredAmphures.map((amphure) => (
              <option key={amphure.id} value={amphure.name_th}>
                {amphure.name_th}
              </option>
            ))}
          </select>
        </div>
        <div className="mb-3">
          <label htmlFor="tambon" className="mr-3">ตำบล:</label>
          <select
            id="tambon"
            value={selectedTambon.name_th}
            onChange={handleTambonChange}
            className="border rounded px-2 py-1"
          >
            <option value="">เลือกตำบล</option>
            {filteredTambons.map((tambon) => (
              <option key={tambon.id} value={tambon.name_th}>
                {tambon.name_th}
              </option>
            ))}
          </select>
        </div>
        <button type="submit" className="bg-blue-500 text-white px-4 py-2 rounded">ค้นหา</button>
        {error && <p className="text-red-500 mt-2">{error}</p>}
      </form>
      {/* Show selected services */}
      <div>
        <h2>รายชื่อผู้ให้บริการ</h2>
        <ul>
        {selectedServices.length > 0 ? (
          selectedServices.map((service, index) => (
            <li key={index}>{service.name}</li>
          ))
        ) : (
          <li>No services selected</li>
        )}
        </ul>
      </div>
    </div>
  );

  ============================================================
  import React, { useState, useEffect } from 'react';
import axios from 'axios';
import NavbarCUS from './NavbarCUS';

function Booking() {
    const [orders, setOrders] = useState([]);
    const [loading, setLoading] = useState(true);
    const [error, setError] = useState(null);

    useEffect(() => {
        // เรียกข้อมูลการจองเมื่อคอมโพเนนต์ถูกโหลด
        const fetchOrders = async () => {
            try {
                const response = await axios.get('http://localhost:3000/api/bookings');
                setOrders(response.data);
                setLoading(false);
            } catch (error) {
                console.error('เกิดข้อผิดพลาดในการเรียกข้อมูลการจอง:', error);
                setError('เกิดข้อผิดพลาดในการเรียกข้อมูลการจอง โปรดลองอีกครั้งในภายหลัง');
                setLoading(false);
            }
        };

        fetchOrders();
    }, []);

    const handleDeleteLatest = async () => {
        try {
            const latestOrder = orders[orders.length - 1]; // รับข้อมูลการจองล่าสุด
            const orderId = latestOrder.id; // รับ ID ของการจองล่าสุด
            await axios.delete(http://localhost:3000/api/booking/${orderId});
            // ลบข้อมูลการจองล่าสุดออกจาก state ท้องถิ่น
            setOrders(orders.filter(order => order.id !== orderId));
        } catch (error) {
            console.error('เกิดข้อผิดพลาดในการลบการจองล่าสุด:', error);
        }
    };

    if (loading) {
        return <div className="flex justify-center items-center h-screen">กำลังโหลด...</div>;
    }

    if (error) {
        return <div className="flex justify-center items-center h-screen text-red-500">{error}</div>;
    }

    return (
        <>
            <NavbarCUS />
            <div className="container mx-auto px-4 py-8 text-black">
                <h1 className="text-2xl font-bold mb-4">ประวัติการจอง</h1>
                <div className="overflow-x-auto">
                    <table className="w-full table-auto">
                        <thead>
                            <tr>
                                <th className="px-4 py-2">รหัสการจอง</th>
                                <th className="px-4 py-2">ยานพาหนะ</th>
                                <th className="px-4 py-2">สถานะ</th>
                                <th className="px-4 py-2">สถานที่รับ</th>
                                <th className="px-4 py-2">สถานที่ส่ง</th>
                                <th className="px-4 py-2">วันที่และเวลา</th>
                                <th className="px-4 py-2">ระยะทางทั้งหมด (กม.)</th>
                                <th className="px-4 py-2">ค่าใช้จ่ายทั้งหมด (บาท)</th>
                            </tr>
                        </thead>
                        <tbody>
                            {orders.map((order) => (
                                <tr key={order.id} className="border-b border-gray-200">
                                    <td className="px-4 py-2">{order.id}</td>
                                    <td className="px-4 py-2">{order.vehicle}</td>
                                    <td className="px-4 py-2">{order.bookingStatus}</td>
                                    <td className="px-4 py-2">{order.pickupLocation ? order.pickupLocation.name : 'N/A'}</td>
                                    <td className="px-4 py-2">{order.dropoffLocation ? order.dropoffLocation.name : 'N/A'}</td>
                                    <td className="px-4 py-2">{order.selectedDateTime}</td>
                                    <td className="px-4 py-2">{order.totalDistance}</td>
                                    <td className="px-4 py-2">{order.totalCost}</td>
                                </tr>
                            ))}
                        </tbody>
                    </table>
                </div>
                <div className="mt-4">
                    <button onClick={handleDeleteLatest} className="bg-red-500 hover:bg-red-700 text-white font-bold py-2 px-4 rounded">
                        ลบการจองล่าสุด
                    </button>
                </div>
            </div>
        </>
    );
}

export default Booking;